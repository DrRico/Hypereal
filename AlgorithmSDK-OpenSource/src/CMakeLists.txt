PROJECT(AlgorithmSDK)
CMAKE_MINIMUM_REQUIRED(VERSION 3.5)
MESSAGE(STATUS "Make AlgorithmSDK start")
ADD_DEFINITIONS("-DALGORITHMDLL_EXPORTS")
# Prerelease flag is for internal only. Conan will enable if developing.
OPTION(ALGORITHMDLL_PRERELEASE "ALGORITHMDLL_PRERELEASE" OFF)
MESSAGE(STATUS "ALGORITHMDLL_PRERELEASE = " ${ALGORITHMDLL_PRERELEASE})
IF(ALGORITHMDLL_PRERELEASE)
	ADD_DEFINITIONS("-DALGORITHMDLL_PRERELEASE")
ENDIF()
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${EXTERNAL_ROOT_DIR}/Irrlicht-math/include)
AUX_SOURCE_DIRECTORY(. LIB_ALGORITHMSDK_SOURCE)
#Display the .h and .hpp files in the project.
FILE (GLOB_RECURSE LIB_ALGORITHMSDK_HEADER "*.[h,hpp]")
FILE (GLOB_RECURSE LIB_IRRLICHT_HEADER "${EXTERNAL_ROOT_DIR}/Irrlicht-math/include/*.[h,hpp]")

ADD_DEFINITIONS("-DLIBALGORITHMSDK_BUILD")

SET(ALGORITHMSDK_BUILD_SOURCE
	${LIB_ALGORITHMSDK_SOURCE}  
	${PROJECT_SOURCE_DIR}/version.rc
	${LIB_ALGORITHMSDK_HEADER}
	${LIB_IRRLICHT_HEADER})

# Build an object for unit test to reuse. (For unit testing.)
ADD_LIBRARY(ALGORITHMSDK_BUILD_OBJECT OBJECT ${ALGORITHMSDK_BUILD_SOURCE})
# Link the object to generate a DLL.
ADD_LIBRARY(AlgorithmSDK SHARED $<TARGET_OBJECTS:ALGORITHMSDK_BUILD_OBJECT>)

TARGET_LINK_LIBRARIES(AlgorithmSDK ${LIB_SOURCE_LIB} ${CONAN_LIBS})

SET_TARGET_PROPERTIES(AlgorithmSDK PROPERTIES OUTPUT_NAME "AlgorithmSDK")  
MESSAGE(STATUS "Make AlgorithmSDK done")
