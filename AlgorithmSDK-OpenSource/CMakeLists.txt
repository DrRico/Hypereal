PROJECT(AlgorithmSDK)
CMAKE_MINIMUM_REQUIRED(VERSION 3.5)
MESSAGE(STATUS "Make AlgorithmSDK start")
SET(CMAKE_SUPPRESS_REGENERATION TRUE)
OPTION(ALGORITHMDLL_PRERELEASE "Build the AlgorithmSDK with pre-release features and APIs." OFF)
IF(ALGORITHMDLL_PRERELEASE)
	ADD_DEFINITIONS("-DALGORITHMDLL_PRERELEASE")
ENDIF()
IF(NOT CONAN_BUILD_INFO_LOADED)
    INCLUDE(conanbuildinfo.cmake)
    # Remove Qt5Ax* lib. For Unit test raised a linking error.
    LIST(REMOVE_ITEM CONAN_LIBS Qt5AxBased Qt5AxContainerd Qt5AxServerd Qt5AxBase Qt5AxContainer Qt5AxServer)
    CONAN_BASIC_SETUP()
    SET(CONAN_BUILD_INFO_LOADED "True")
ENDIF()
IF(NOT LIBRARY_OUTPUT_PATH)
	MESSAGE(STATUS "Set LIBRARY_OUTPUT_PATH: ${PROJECT_BINARY_DIR}.")
	SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
ENDIF()	
IF(NOT EXECUTABLE_OUTPUT_PATH)
	MESSAGE(STATUS "Set EXECUTABLE_OUTPUT_PATH: ${PROJECT_BINARY_DIR}")
	SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
ENDIF() 
SET(ALGORITHM_ROOT_DIR ${PROJECT_SOURCE_DIR})
SET(ALGORITHM_SRC_DIR ${PROJECT_SOURCE_DIR}/src)
SET(EXTERNAL_ROOT_DIR ${PROJECT_SOURCE_DIR}/external)
SET(HVR_LOGGER_ROOT_DIR ${EXTERNAL_ROOT_DIR}/HVR_Logger)
SET(LIB_ROOT_DIR ${EXTERNAL_ROOT_DIR}/lib)
SET(CameraDriver_ROOT_DIR ${PROJECT_SOURCE_DIR}/CameraDriver)
SET(ImageProcessor_ROOT_DIR ${PROJECT_SOURCE_DIR}/ImageProcessor)

IF(${CMAKE_VS_PLATFORM_NAME} STREQUAL  "Win32")
MESSAGE(STATUS "Build AlgorithmSDK with Win32")
	SET(LIB_SOURCE_LIB
	debug "setupapi.lib"
	optimized "setupapi.lib"
	)
ELSEIF(${CMAKE_VS_PLATFORM_NAME} STREQUAL "x64")
MESSAGE(STATUS "Build AlgorithmSDK with x64")
	SET(LIB_SOURCE_LIB 
	debug "setupapi.lib"
	optimized "setupapi.lib"
    )
ELSE()
	MESSAGE(FATAL_ERROR "Please build this project with Visual Studio")
ENDIF()

INCLUDE_DIRECTORIES(${EXTERNAL_ROOT_DIR}/include ${HVR_LOGGER_ROOT_DIR}/include)
ADD_SUBDIRECTORY(src)
MESSAGE(STATUS "Make AlgorithmSDK done")
